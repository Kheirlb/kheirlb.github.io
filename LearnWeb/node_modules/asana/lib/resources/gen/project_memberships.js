
/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing (like unused requires).
 * TODO: maybe we can just disable those specifically and keep this code
 * pretty lint-free too!
 */
/* jshint ignore:start */
var Resource = require('../resource');
var util = require('util');
var _ = require('lodash');

/**
 * With the introduction of "comment-only" projects in Asana, a user's membership
 * in a project comes with associated permissions. These permissions (whether a
 * user has full access to the project or comment-only access) are accessible
 * through the project memberships endpoints described here.
 * @class
 * @param {Dispatcher} dispatcher The API dispatcher
 */
function ProjectMemberships(dispatcher) {
  Resource.call(this, dispatcher);
}
util.inherits(ProjectMemberships, Resource);


/**
 * Returns the compact project membership records for the project.
   * @param {String} project The project for which to fetch memberships.
   * @param {Object} [params] Parameters for the request
   * @param {String} [params.user] If present, the user to filter the memberships to.
   * @param {Object} [dispatchOptions] Options, if any, to pass the dispatcher for the request
   * @return {Promise} The response from the API
 */
ProjectMemberships.prototype.getMany = function(
    project,
    params,
    dispatchOptions
) {
  var path = util.format('/projects/%s/project_memberships', project);
  
  return this.dispatchGetCollection(path, params, dispatchOptions);
};

/**
 * Returns the project membership record.
   * @param {String} project Globally unique identifier for the project membership.
   * @param {Object} [params] Parameters for the request
   * @param {Object} [dispatchOptions] Options, if any, to pass the dispatcher for the request
   * @return {Promise} The requested resource
 */
ProjectMemberships.prototype.getSingle = function(
    project,
    params,
    dispatchOptions
) {
  var path = util.format('/project_memberships/%s', project);
  
  return this.dispatchGet(path, params, dispatchOptions);
};


module.exports = ProjectMemberships;
/* jshint ignore:end */
